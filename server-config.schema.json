{
  "title": "Geoportal-Server config schema",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "properties": {
    "compressResponse": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string",
          "pattern": "^\\$.*"
        }
      ]
    },
    "basicAuthentication": {
      "additionalProperties": false,
      "$ref": "#/definitions/BasicAuthenticationDto",
      "type": "object"
    },
    "port": {
      "oneOf": [
        {
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        {
          "type": "string",
          "pattern": "^\\$.*"
        }
      ]
    },
    "initPaths": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "share": {
      "additionalProperties": false,
      "$ref": "#/definitions/ShareConfigDto",
      "type": "object"
    },
    "feedback": {
      "additionalProperties": false,
      "$ref": "#/definitions/FeedbackConfigDto",
      "type": "object"
    },
    "proxy": {
      "additionalProperties": false,
      "$ref": "#/definitions/ProxyConfigDto",
      "type": "object"
    },
    "trustProxy": {},
    "serveStatic": {
      "additionalProperties": false,
      "$ref": "#/definitions/ServeStaticDto",
      "type": "object"
    },
    "csp": {
      "additionalProperties": false,
      "$ref": "#/definitions/ContentSecurityPolicyDto",
      "type": "object"
    },
    "$schema": {
      "type": "string"
    }
  },
  "type": "object",
  "definitions": {
    "AdditionalParametersDto": {
      "properties": {
        "descriptiveLabel": {
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object",
      "required": ["descriptiveLabel", "name"]
    },
    "BaseFeedbackDto": {
      "properties": {
        "service": {
          "minLength": 1,
          "type": "string",
          "enum": ["github", "mail", "redmine"]
        },
        "id": {
          "minLength": 1,
          "type": "string"
        },
        "additionalParameters": {
          "items": {
            "$ref": "#/definitions/AdditionalParametersDto"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": ["service", "id"]
    },
    "GithubFeedbackDto": {
      "properties": {
        "service": {
          "type": "string",
          "enum": ["github"],
          "minLength": 1
        },
        "issuesUrl": {
          "oneOf": [
            {
              "format": "uri",
              "pattern": "^(https?|wss?|ftp)://"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "accessToken": {
          "minLength": 1,
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "id": {
          "minLength": 1,
          "type": "string"
        },
        "additionalParameters": {
          "items": {
            "$ref": "#/definitions/AdditionalParametersDto"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": ["service", "issuesUrl", "accessToken", "id"]
    },
    "MailFeedbackAuth": {
      "properties": {
        "user": {
          "minLength": 1,
          "type": "string"
        },
        "pass": {
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object",
      "required": ["user", "pass"]
    },
    "MailFeedbackDto": {
      "properties": {
        "service": {
          "type": "string",
          "enum": ["mail"],
          "minLength": 1
        },
        "smtpHost": {
          "anyOf": [
            {
              "type": "string",
              "pattern": "((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])"
            },
            {
              "type": "string",
              "format": "ipv6"
            },
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ],
          "minLength": 1,
          "type": "string"
        },
        "smtpPort": {
          "type": "string",
          "minLength": 1
        },
        "secure": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "auth": {},
        "email": {
          "format": "email",
          "type": "string"
        },
        "id": {
          "minLength": 1,
          "type": "string"
        },
        "additionalParameters": {
          "items": {
            "$ref": "#/definitions/AdditionalParametersDto"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": ["service", "smtpHost", "smtpPort", "secure", "email", "id"]
    },
    "RedmineFeedbackDto": {
      "properties": {
        "service": {
          "type": "string",
          "enum": ["redmine"],
          "minLength": 1
        },
        "project_id": {
          "oneOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "issuesUrl": {
          "oneOf": [
            {
              "format": "uri",
              "pattern": "^(https?|wss?|ftp)://"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "username": {
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "minLength": 1,
          "type": "string"
        },
        "id": {
          "minLength": 1,
          "type": "string"
        },
        "additionalParameters": {
          "items": {
            "$ref": "#/definitions/AdditionalParametersDto"
          },
          "type": "array"
        }
      },
      "type": "object",
      "required": [
        "service",
        "project_id",
        "issuesUrl",
        "username",
        "password",
        "id"
      ]
    },
    "FeedbackConfigDto": {
      "properties": {
        "primaryId": {
          "minLength": 1,
          "type": "string"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/BaseFeedbackDto",
            "oneOf": [
              {
                "additionalProperties": false,
                "$ref": "#/definitions/GithubFeedbackDto"
              },
              {
                "additionalProperties": false,
                "$ref": "#/definitions/MailFeedbackDto"
              },
              {
                "additionalProperties": false,
                "$ref": "#/definitions/RedmineFeedbackDto"
              }
            ]
          },
          "type": "array",
          "not": {
            "type": "null"
          }
        }
      },
      "type": "object",
      "required": ["primaryId", "options"]
    },
    "CreateFeedbackDto": {
      "properties": {
        "title": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "format": "email",
          "type": "string"
        },
        "shareLink": {
          "oneOf": [
            {
              "format": "uri",
              "pattern": "^(https?|wss?|ftp)://"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "comment": {
          "minLength": 30,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProxyAuthConfigDto": {
      "additionalProperties": false,
      "properties": {
        "headers": {
          "items": {
            "additionalProperties": false,
            "$ref": "#/definitions/ProxyAuthHeaders"
          },
          "type": "array"
        },
        "authorization": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProxyAuthHeaders": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "required": ["name", "value"]
    },
    "ProxyConfigDto": {
      "properties": {
        "postSizeLimit": {
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "proxyAllDomains": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "allowProxyFor": {
          "items": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "((?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])[.]){3}(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])"
              },
              {
                "type": "string",
                "format": "ipv6"
              },
              {
                "type": "string",
                "format": "hostname"
              },
              {
                "type": "string",
                "pattern": "^\\$.*"
              }
            ],
            "type": "string"
          },
          "type": "array"
        },
        "blacklistedAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "whitelistPath": {
          "type": "string"
        },
        "blacklistPath": {
          "type": "string"
        },
        "upstreamProxy": {
          "format": "hostname",
          "type": "string"
        },
        "bypassUpstreamProxyHosts": {
          "items": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string",
                "pattern": "^\\$.*"
              }
            ]
          },
          "type": "object"
        },
        "appendParamToQueryString": {
          "type": "object"
        },
        "proxyAuth": {
          "additionalProperties": {
            "$ref": "#/definitions/ProxyAuthConfigDto"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AppendParamToQueryStringDto": {
      "properties": {
        "regexPattern": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      },
      "type": "object",
      "required": ["regexPattern", "params"]
    },
    "ShareDto": {
      "properties": {
        "service": {
          "type": "string",
          "enum": ["gist", "s3"],
          "not": {
            "type": "null"
          }
        },
        "prefix": {
          "not": {
            "type": "null"
          },
          "pattern": "^[0-9a-zA-Z]+$",
          "type": "string"
        }
      },
      "type": "object",
      "required": ["service", "prefix"]
    },
    "ShareGistDto": {
      "properties": {
        "service": {
          "type": "string",
          "enum": ["gist"],
          "not": {
            "type": "null"
          }
        },
        "apiUrl": {
          "oneOf": [
            {
              "format": "uri",
              "pattern": "^(https?|wss?|ftp)://"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "accessToken": {
          "minLength": 1,
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "prefix": {
          "not": {
            "type": "null"
          },
          "pattern": "^[0-9a-zA-Z]+$",
          "type": "string"
        }
      },
      "type": "object",
      "required": ["service", "apiUrl", "userAgent", "prefix"]
    },
    "ShareS3Dto": {
      "properties": {
        "service": {
          "type": "string",
          "enum": ["s3"],
          "not": {
            "type": "null"
          }
        },
        "region": {
          "minLength": 1,
          "type": "string"
        },
        "bucket": {
          "minLength": 1,
          "type": "string"
        },
        "credentials": {},
        "keyLength": {
          "oneOf": [
            {
              "minimum": 0,
              "maximum": 54,
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "prefix": {
          "not": {
            "type": "null"
          },
          "pattern": "^[0-9a-zA-Z]+$",
          "type": "string"
        }
      },
      "type": "object",
      "required": ["service", "region", "bucket", "prefix"]
    },
    "ShareConfigDto": {
      "properties": {
        "newPrefix": {
          "minLength": 1,
          "type": "string",
          "pattern": "^[0-9a-zA-Z]+$"
        },
        "maxRequestSize": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "availablePrefixes": {
          "items": {
            "$ref": "#/definitions/ShareDto",
            "oneOf": [
              {
                "additionalProperties": false,
                "$ref": "#/definitions/ShareGistDto"
              },
              {
                "additionalProperties": false,
                "$ref": "#/definitions/ShareS3Dto"
              }
            ]
          },
          "type": "array",
          "not": {
            "type": "null"
          }
        }
      },
      "type": "object",
      "required": ["newPrefix", "availablePrefixes"]
    },
    "RateLimitDto": {
      "properties": {
        "freeRetries": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "minWait": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "maxWait": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        }
      },
      "type": "object"
    },
    "BasicAuthenticationDto": {
      "properties": {
        "username": {
          "minLength": 1,
          "type": "string",
          "pattern": "^[0-9a-zA-Z]+$"
        },
        "password": {
          "minLength": 1,
          "type": "string",
          "pattern": "^[0-9a-zA-Z]+$"
        },
        "rateLimit": {
          "additionalProperties": false,
          "$ref": "#/definitions/RateLimitDto",
          "type": "object"
        }
      },
      "type": "object",
      "required": ["username", "password"]
    },
    "ServeStaticDto": {
      "properties": {
        "serveStatic": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        },
        "resolvePathRelativeToWwwroot": {
          "type": "string"
        },
        "resolveUnmatchedPathsWithIndexHtml": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "pattern": "^\\$.*"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContentSecurityPolicyDto": {
      "properties": {
        "scriptSrc": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "connectSrc": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "imgSrc": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "frameSrc": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "frameAncestors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  }
}
